---
title: "DataFrames.jl"

number-sections: true
number-depth: 2
crossref:
  chapters: false
---

[`DataFrames.jl`](https://dataframes.juliadata.org/stable/) 은 2차원 데이터 테이블을 다루는 `DataFrame` 타입을 지원한다. `DataFrame` 타입은 파이썬의 `pandas` 의 `DataFrame` 이나 `R` 의 `DataFrame` 과 같이 2차원 데이터를 표현하는 데이터 구조이다. 엑셀 sheet 의 각 열과 행을 프로그래밍으로 다루기 위한 데이터 구조라고 생각할 수 있다.

## 설치

다른 julia 패키지와 마찬가지로 REPL 이나 jupyter 에서

```julia
using Pkg
Pkg.add("DataFrames")
```

를 통해 설치 할 수 있다. 물론 REPL 에서 `]` 를 통해 패키지 모드로 진입한 후

```txt
(@v1.10) pkg> add DataFrames
```

로 설치할 수도 있다.

</br>

## `DataFrame`

`DataFrame` 타입 인스턴스는 다음과 같이 만들 수 있다.

```txt
In [1]: using DataFrames

In [2]: df=DataFrame(a=1:3, b=["A", "B", "C"])
Out[2]: 3×2 DataFrame
 Row │ a      b
     │ Int64  String
─────┼───────────────
   1 │     1  A
   2 │     2  B
   3 │     3  C
```

출력은 REPL 의 모습이며 jupyter 에서는 약간 다르다. `DataFrames` 는 모듈 이름이며 타입 이름은 마지막 `s` 가 빠진 `DataFrame` 이다. `df` 은 "a" 와 "b" 의 두 칼럼으로 구성되었으며 각 칼럼은 같은 수의 성분을 갖는 1차원 배열이다. `names()` 함수를 통해 칼렴 이름(여기서는 "a", "b") 를 얻을 수 있다.  가 칼럼에 대해 접근할 때는 `df.a`, `df."a"`, `df[!, :a]`,  `df[!, "a"]` 와 같이 접근 할 수 있다.

```txt
In [19]: df.a[1]
Out[19]: 1

In [20]: df."a"[2]
Out[20]: 2

In [21]: df[!, :b][1]
Out[21]: "A"

In [22]: df[:, "b"][2]
Out[22]: "B"
```

